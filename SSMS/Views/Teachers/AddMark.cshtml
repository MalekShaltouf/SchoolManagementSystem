@using System.Web;
@model SSMS.Models.Mark

@{
    ViewBag.Title = "Add Mark";
}

@section LinkStyle
    {
    <link rel="stylesheet" href="~/Content/AddUser_Style.css" />
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="transform:translateY(170px);">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ClassId)
        @Html.HiddenFor(model => model.MaterialId)
        @Html.Hidden("StudentId")
        
        
        <div class="form-group">
            @Html.LabelFor(model => model.Mark1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mark1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mark1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                @if (ViewBag.SuccessfulStatus != null)
                {
                    <span class="SuccessfulStatus">@ViewBag.SuccessfulStatus</span>
                }
                else
                {
                    <span class="FaildStatus">@ViewBag.FaildStatus</span>
                }
            </div>
        </div>
    </div>
}

@{ 
    int ClassId = int.Parse(HttpContext.Current.Request.RequestContext.RouteData.Values["id"].ToString());
    string MaterialName = Request.QueryString["MaterialName"];
    int MaterialId = int.Parse(Request.QueryString["MaterialId"]);
}

<div class="link" style="transform:translateY(170px);">
    @Html.ActionLink("Back to List", "TeacherStudents", "Teachers",new { id = ClassId, MaterialName = MaterialName, MaterialId = MaterialId },null)
</div>
